{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","services/PersonService.js","Notification.js","App.js","index.js"],"names":["Filter","filterText","updateFilter","value","onChange","PersonForm","addName","newName","updateName","newNumber","updateNumber","onSubmit","type","Persons","personList","deleteName","map","person","key","id","name","number","onClick","base","axios","get","then","response","data","catch","error","console","log","post","put","delete","Notification","errorMessage","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterText","setErrorMessage","useEffect","personService","initialPersons","personfilter","filter","toLowerCase","includes","event","target","preventDefault","personId","find","window","confirm","setTimeout","concat","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75aaaa02.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filterText, updateFilter}) => {\n  return (\n    <div>\n    filter shown on: <input value={filterText} onChange={updateFilter} />\n    <br></br>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addName, newName, updateName, newNumber, updateNumber}) => {\n  return (\n    <form onSubmit={addName}>\n    <div>\n      name: <input value={newName} onChange={updateName} />\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={updateNumber} />\n    </div>        \n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n\n","import React from 'react'\n\nconst Persons = ({personList, deleteName}) => {\n  return (\n    <div>\n      {personList.map(person => <div key={person.id}>{person.name} {person.number} <button onClick={() => deleteName(person.id, person.name)}>Delete</button></div>)}\n    </div>\n  )\n}\n\nexport default Persons\n","import axios from 'axios'\n\nconst base = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(`${base}`)\n  return request.then(response => response.data)\n  .catch(error => {\n    console.log(\"error. not found\")\n  })\n}\n\nconst addPerson = (person) => {\n  const request = axios.post(`${base}`, person)\n  return request\n}\n\nconst updatePerson = (id, person) => {\n  const request = axios.put(`${base}/${id}`, person)\n  return request.then(response => response.data)\n  .catch(error => {\n    console.log(\"error\")\n  })  \n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${base}/${id}`)\n  return request\n}\n\nexport default {getAll, addPerson, updatePerson, deletePerson}","import React from 'react'\n\nconst Notification = ({errorMessage}) => {\n  if (errorMessage === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {errorMessage}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport personService from './services/PersonService'\nimport Notification from './Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterText, setFilterText ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n    .then(initialPersons =>\n      setPersons(initialPersons)\n    )\n  }, [])\n\n  const personfilter = (filterText === '') ? persons : persons.filter(person => person.name.toLowerCase().includes(filterText.toLowerCase())); \n\n  const addName = (event) => {\n    event.preventDefault()\n    const personId = persons.find(person => person.name === newName)\n    if (personId) {\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)){\n        personService.updatePerson(personId.id, {...personId, number:newNumber})\n        .then(response => {\n          setPersons(persons.map(person => person.id !== response.id ? person : response))\n          setErrorMessage(`Updated ${newName} successfully.`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)            \n        })\n        .catch(error => {\n          setErrorMessage(`Information of ${newName} has already been removed from the server.`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)            \n        })        \n      }\n      setNewName('')\n      setNewNumber('')\n    }\n    else {\n      if (newName && newNumber){\n        personService.addPerson({name: newName, number: newNumber})\n        .then(response => {\n          setPersons(persons.concat(response))\n          setErrorMessage(`Added ${newName}.`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)           \n        })\n        .catch(error => {\n          console.log(error.response)\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)              \n        })        \n        setNewName('')\n        setNewNumber('')        \n      }\n      else {\n        setErrorMessage('Please complete all fields.')\n\n      }\n    }\n  }\n\n  const deleteName = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) { \n      personService.deletePerson(id)\n      .then(response => {\n        if(response.status === 204){\n          setPersons(persons.filter(person => person.id !== id))\n        }\n        setErrorMessage(`Deleted ${name}.`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)        \n      })\n      .catch(error => {\n        console.log(error)\n      })\n    }\n  }\n\n  const updateName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const updateNumber = (event) => {\n    setNewNumber(event.target.value)\n  }  \n\n  const updateFilter = (event) => {\n    setFilterText(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification errorMessage={errorMessage} />\n      <Filter filterText={filterText} updateFilter={updateFilter} />\n      <h3>Add a new person</h3>\n      <PersonForm addName={addName} newName={newName} updateName={updateName} newNumber={newNumber} updateNumber={updateNumber} />\n      <h2>Numbers</h2>\n      <Persons personList={personfilter} deleteName={deleteName} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}